name: Soot CI
on: [push]
jobs:
  StyleAndLicense:
    name: "Check style\xB4and license conformity"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/soot/soot/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_StyleAndLicense_Checkout_10
    - run: rm starting_StyleAndLicense_Checkout_10
    - name: Checkout
      uses: actions/checkout@v2
    - run: touch starting_StyleAndLicense_UseJava8_12
    - run: rm starting_StyleAndLicense_UseJava8_12
    - name: Use Java 8
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    - run: touch starting_StyleAndLicense_Stylecheck_16
    - run: rm starting_StyleAndLicense_Stylecheck_16
    - name: Stylecheck
      run: 'mvn -B clean checkstyle:check -Dcheckstyle.failOnViolation=true

        '
    - run: touch starting_StyleAndLicense_Licensecheck_21
    - run: rm starting_StyleAndLicense_Licensecheck_21
    - name: Licensecheck
      run: 'mvn -B clean license:check-file-header -Dlicence-check.failOnMissingHeader=true

        '
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'soot/.github/workflows/ci/StyleAndLicense'
  DeployArtifacts:
    name: Deploy artifacts to Maven Central
      github.ref == 'refs/heads/umbrella'
    needs:
    - BuildAndTest_java_version_11
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/soot/soot/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_DeployArtifacts_Checkout_34
    - run: rm starting_DeployArtifacts_Checkout_34
    - name: Checkout
      uses: actions/checkout@v2
    - run: touch starting_DeployArtifacts_UseJava8_36
    - run: rm starting_DeployArtifacts_UseJava8_36
    - name: Use Java 8
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    - run: touch starting_DeployArtifacts_Deployartifacts_40
    - run: rm starting_DeployArtifacts_Deployartifacts_40
    - name: Deploy artifacts
      uses: samuelmeuli/action-maven-publish@v1
      with:
        gpg_private_key: ${{ secrets.gpg_private_key }}
        gpg_passphrase: ${{ secrets.gpg_passphrase }}
        nexus_username: ${{ secrets.nexus_username }}
        nexus_password: ${{ secrets.nexus_password }}
        maven_args: -DskipTests -Dcheckstyle.failOnViolation=true
    - run: touch starting_DeployArtifacts_GetVersion_48
    - run: rm starting_DeployArtifacts_GetVersion_48
    - name: Get Version
      id: version
      run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version
        -q -DforceStdout)
    - run: touch starting_DeployArtifacts_Organizedocumentationfilesforupload_52
    - run: rm starting_DeployArtifacts_Organizedocumentationfilesforupload_52
    - name: Organize documentation files for upload
      shell: bash
      env:
        docdir: ./build/docs
      run: 'export releasedir=${docdir}/${{ steps.version.outputs.version }} # env
        variables cannot contain other env variables

        mkdir -p ${releasedir}/jdoc

        unzip ./target/sootclasses-trunk-javadoc.jar -d ${releasedir}/jdoc/

        mkdir -p ${releasedir}/options

        cp ./doc/soot_options.html ${releasedir}/options/

        cp ./doc/soot_options.css ${releasedir}/options/

        cp ./doc/index.html ${docdir}/

        '
    - run: touch starting_DeployArtifacts_DeployJavaDoctoGHpages_72
    - run: rm starting_DeployArtifacts_DeployJavaDoctoGHpages_72
    - name: Deploy JavaDoc to GH pages
      uses: JamesIves/github-pages-deploy-action@4.1.5
      with:
        branch: gh-pages
        folder: build/
        clean: false
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'soot/.github/workflows/ci/DeployArtifacts'
  BuildAndTest_java_version_8:
    name: Build and Test with java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version:
        - '8'
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/soot/soot/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_BuildAndTestjavaversion8_Checkout_86
    - run: rm starting_BuildAndTestjavaversion8_Checkout_86
    - name: Checkout
      uses: actions/checkout@v2
    - run: touch starting_BuildAndTestjavaversion8_UseJavamatrixjavaversion_88
    - run: rm starting_BuildAndTestjavaversion8_UseJavamatrixjavaversion_88
    - name: Use Java ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - run: touch starting_BuildAndTestjavaversion8_BuildandtestJavamatrixjavaversion_92
    - run: rm starting_BuildAndTestjavaversion8_BuildandtestJavamatrixjavaversion_92
    - name: Build and test Java ${{ matrix.java_version }}
      run: 'mvn -B clean test -PJava${{ matrix.java_version }}

        '
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'soot/.github/workflows/ci/BuildAndTestjavaversion8'
  BuildAndTest_java_version_9:
    name: Build and Test with java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version:
        - '9'
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/soot/soot/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_BuildAndTestjavaversion9_Checkout_104
    - run: rm starting_BuildAndTestjavaversion9_Checkout_104
    - name: Checkout
      uses: actions/checkout@v2
    - run: touch starting_BuildAndTestjavaversion9_UseJavamatrixjavaversion_106
    - run: rm starting_BuildAndTestjavaversion9_UseJavamatrixjavaversion_106
    - name: Use Java ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - run: touch starting_BuildAndTestjavaversion9_BuildandtestJavamatrixjavaversion_110
    - run: rm starting_BuildAndTestjavaversion9_BuildandtestJavamatrixjavaversion_110
    - name: Build and test Java ${{ matrix.java_version }}
      run: 'mvn -B clean test -PJava${{ matrix.java_version }}

        '
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'soot/.github/workflows/ci/BuildAndTestjavaversion9'
  BuildAndTest_java_version_11:
    name: Build and Test with java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version:
        - '11'
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/soot/soot/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_BuildAndTestjavaversion11_Checkout_122
    - run: rm starting_BuildAndTestjavaversion11_Checkout_122
    - name: Checkout
      uses: actions/checkout@v2
    - run: touch starting_BuildAndTestjavaversion11_UseJavamatrixjavaversion_124
    - run: rm starting_BuildAndTestjavaversion11_UseJavamatrixjavaversion_124
    - name: Use Java ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java_version }}
    - run: touch starting_BuildAndTestjavaversion11_BuildandtestJavamatrixjavaversion_128
    - run: rm starting_BuildAndTestjavaversion11_BuildandtestJavamatrixjavaversion_128
    - name: Build and test Java ${{ matrix.java_version }}
      run: 'mvn -B clean test -PJava${{ matrix.java_version }}

        '
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'soot/.github/workflows/ci/BuildAndTestjavaversion11'

